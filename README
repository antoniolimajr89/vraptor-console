START:

	java -Djava.security.policy=vraptor.police -jar vraptor-console.jar

SUPPORTED

	run ==> (re)starts the jetty server
	restart ==> (re)starts the jetty server
	stop ==> stops the jetty server
	unitTests => mvn test surefire-report:report
	compile => mvn compile
	war => mvn package
	custom class actions located in target/vraptor-console-extra will be loaded automatically 
	
Production

In a production environment, no extra contexts are set up.
To go live, do:

	mvn package
	VRAPTOR_ENVIRONMENT=production java -jar vraptor-console-1.0.0.jar 'run target/my-application.war'
	
Instead of setting the VRAPTOR_ENVIRONMENT, you can use a custom web.xml according to the vraptor-environment rules.


Development

	Support remote debug via port 1044, simply connect to it via Eclipse.
	
URIS

	/target ==> display the target directory
	/tests/unit ==> unitTests

TODO BEFORE RELEASE 1
- tests
- doc on "new project"
- docs on "how to configure your project"
- generate vraptor-console on each package command so we can distribute it
- release it

TODO
- allow to run jasmine JS tests
- support multiple jetty versions
- acceptance-test
- allow to run acceptance tests via web
- include vraptor-environment, vraptor-simplemail, vraptor-errorcontrol
